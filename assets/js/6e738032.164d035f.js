"use strict";(self.webpackChunkelemental_docs=self.webpackChunkelemental_docs||[]).push([[7653],{51269:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var a=t(74848),i=t(28453);const r={sidebar_label:"Inventory Management",title:"",version_badge:"1.3.0"},s=void 0,o={id:"inventory-management",title:"",description:"Inventory Management",source:"@site/docs/inventory-management.md",sourceDirName:".",slug:"/inventory-management",permalink:"/next/inventory-management",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_label:"Inventory Management",title:"",version_badge:"1.3.0"},sidebar:"docs",previous:{title:"Kubernetes versions",permalink:"/next/kubernetesversions"},next:{title:"Machine Reset",permalink:"/next/reset"}},c={},l=[{value:"Inventory Management",id:"inventory-management",level:2},{value:"MachineInventory",id:"machineinventory",level:3},{value:"System Annotations",id:"system-annotations",level:4},{value:"Reference",id:"reference",level:4},{value:"MachineRegistration",id:"machineregistration",level:3},{value:"Reference",id:"reference-1",level:4}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components},{Head:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t,{children:(0,a.jsx)("link",{rel:"canonical",href:"https://elemental.docs.rancher.com/inventory-management"})}),"\n",(0,a.jsx)(n.h2,{id:"inventory-management",children:"Inventory Management"}),"\n",(0,a.jsx)(n.p,{children:"The Elemental operator can hold an inventory of machines and\nthe mapping of the machine to it's configuration and assigned cluster."}),"\n",(0,a.jsx)(n.h3,{id:"machineinventory",children:"MachineInventory"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"MachineInventory"})," holds all the relevant information for a registered machine."]}),"\n",(0,a.jsxs)(n.p,{children:["Upon successful registration, the ",(0,a.jsx)(n.code,{children:"MachineInventory"})," inherits all the ",(0,a.jsx)(n.code,{children:"machineInventoryLabels"}),"\nand the ",(0,a.jsx)(n.code,{children:"machineInventoryAnnotations"})," defined in the associated ",(0,a.jsx)(n.code,{children:"MachineRegistration"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["The registering host sends also a bunch of ",(0,a.jsx)(n.a,{href:"#system-annotations",children:(0,a.jsx)(n.code,{children:"system annotations"})})," tracking information regarding the authentication\nmethod used, the running OS version and the current IP address."]}),"\n",(0,a.jsxs)(n.p,{children:["Those annotations are added to the associated ",(0,a.jsx)(n.a,{href:"/next/machineinventory-reference",children:"MachineInventory"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Elemental machines attempt a registration update every 30 minutes to update labels and annotations."}),"\n",(0,a.jsx)(n.h4,{id:"system-annotations",children:"System Annotations"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Key"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"elemental.cattle.io/auth"}),(0,a.jsx)(n.td,{children:"Authentication used during registration (one of 'tpm', 'emulated-tpm', 'mac', 'sys-uuid')"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"elemental.cattle.io/registration-ip"}),(0,a.jsx)(n.td,{children:"IP address used during last registration"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"elemental.cattle.io/os.unmanaged"}),(0,a.jsx)(n.td,{children:"Only present when set to 'true', disables OS management functionality on the tracked host"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"elemental.cattle.io/name"}),(0,a.jsx)(n.td,{children:"'NAME' from /etc/os-release"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"elemental.cattle.io/version"}),(0,a.jsx)(n.td,{children:"'VERSION' from /etc/os-release"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"elemental.cattle.io/version-id"}),(0,a.jsx)(n.td,{children:"'VERSION_ID' from /etc/os-release"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"elemental.cattle.io/id"}),(0,a.jsx)(n.td,{children:"'ID' from /etc/os-release"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"elemental.cattle.io/pretty-name"}),(0,a.jsx)(n.td,{children:"'PRETTY_NAME' from /etc/os-release"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"elemental.cattle.io/image"}),(0,a.jsx)(n.td,{children:"'IMAGE' from /etc/os-release"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"elemental.cattle.io/cpe-name"}),(0,a.jsx)(n.td,{children:"'CPE_NAME' from /etc/os-release"})]})]})]}),"\n",(0,a.jsx)(n.h4,{id:"reference",children:"Reference"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"apiVersion: elemental.cattle.io/v1beta1\nkind: MachineInventory\nmetadata:\n  # Machine annotations can be useful to identify hosts\n  annotations:\n    elemental.cattle.io/auth: tpm\n    elemental.cattle.io/registration-ip: 192.168.122.152\n  labels:\n    # A label inherited from the MachineRegistration definition\n    element: fire\n    # Generic SMBIOS labels that are typically populated with\n    # the MachineRegister approach\n    machineUUID: f266c64b-3972-40e7-9937-3dc4a311436c\n    manufacturer: QEMU\n    productName: Standard-PC-Q35-ICH9-2009\n    serialNumber: Not-Specified\n    # Custom labels can be applied to each MachineInventory\n    myCustomLabel: foo \n  name: m-479ab68e-00ff-4081-a731-5b1a76610289\n  # The namespace must match the namespace of the cluster\n  # assigned to the clusters.provisioning.cattle.io resource\n  namespace: fleet-default\n  # A reference to the MachineInventorySelector that links the \n  # machine to a Cluster definition\n  ownerReferences:\n  - apiVersion: elemental.cattle.io/v1beta1\n    controller: true\n    kind: MachineInventorySelector\n    name: fire-machine-selector-qcn7d\n    uid: 0a1f751e-4ca9-4a0d-919a-97ba1f434d12\nspec:\n  # The hash of the TPM EK public key. This is used if you are\n  # using TPM2 to identifiy nodes. Nodes can report their TPM\n  # hash by using the MachineRegistration.\n  tpmHash: d68795c6192af9922692f050b...\n"})}),"\n",(0,a.jsx)(n.h3,{id:"machineregistration",children:"MachineRegistration"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"MachineRegistration"})," holds information on how to install, reset, and configure all connected Elemental machines."]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"spec.machineInventoryLabels"})," and ",(0,a.jsx)(n.code,{children:"spec.machineInventoryAnnotations"})," fields hold label and annotation templates\nrendered to actual labels and annotations applied to the ",(0,a.jsx)(n.a,{href:"/next/machineinventory-reference",children:"MachineInventories"})," tracking\nthe registered machines."]}),"\n",(0,a.jsx)(n.p,{children:"Elemental machines attempt a registration update every 30 minutes to update labels and annotations."}),"\n",(0,a.jsxs)(n.p,{children:["While it's possible to modify the ",(0,a.jsx)(n.code,{children:"spec.config"})," definition, updates to the ",(0,a.jsx)(n.code,{children:"spec.config"})," will be ignored by machines that already completed installation.\nMachines that couldn't complete the installation will try again every 30 minutes by reloading the remote ",(0,a.jsx)(n.code,{children:"MachineRegistration"})," definition.\nThis can be useful to correct ",(0,a.jsx)(n.code,{children:"spec.config"})," mistakes that prevent successful installation (for ex. ",(0,a.jsx)(n.code,{children:"spec.config.elemental.install.device"}),"), without having to create a new ",(0,a.jsx)(n.code,{children:"MachineRegistration"})," and a new ISO."]}),"\n",(0,a.jsx)(n.h4,{id:"reference-1",children:"Reference"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: elemental.cattle.io/v1beta1\nkind: MachineRegistration\nmetadata:\n  name: fire-nodes\n  # The namespace must match the namespace of the cluster\n  # assigned to the clusters.provisioning.cattle.io resource\n  namespace: fleet-default\nspec:\n  # The cloud config that will be used to provision the node\n  config:\n    cloud-config:\n      users:\n        - name: root\n          passwd: root\n    elemental:\n      install:\n        reboot: true\n        device: /dev/sda\n        debug: true\n      reset:\n        enabled: true\n        debug: true\n        reset-persistent: true\n        reset-oem: true\n        reboot: true\n  # Labels to be added to the created MachineInventory object\n  machineInventoryLabels:\n    element: fire\n    manufacturer: "${System Information/Manufacturer}"\n    productName: "${System Information/Product Name}"\n    serialNumber: "${System Information/Serial Number}"\n    machineUUID: "${System Information/UUID}"\n  # Annotations to be added to the created MachineInventory object\n  machineInventoryAnnotations: {}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var a=t(96540);const i={},r=a.createContext(i);function s(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);