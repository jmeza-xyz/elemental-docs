"use strict";(self.webpackChunkelemental_docs=self.webpackChunkelemental_docs||[]).push([[8228],{26327:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>n,metadata:()=>l,toc:()=>a});var d=r(74848),s=r(28453);const n={sidebar_label:"Hardware",title:""},i=void 0,l={id:"hardwarelabels",title:"",description:"Hardware Template Variables have been deprecated: please use the new",source:"@site/docs/hardwarelabels.md",sourceDirName:".",slug:"/hardwarelabels",permalink:"/next/hardwarelabels",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_label:"Hardware",title:""}},c={},a=[{value:"Hardware Template Variables",id:"hardware-template-variables",level:2},{value:"Block device drive types",id:"block-device-drive-types",level:3},{value:"Block device controller types",id:"block-device-controller-types",level:3}];function o(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components},{Head:r}=t;return r||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(r,{children:(0,d.jsx)("link",{rel:"canonical",href:"https://elemental.docs.rancher.com/hardwarelabels"})}),"\n","\n","\n",(0,d.jsxs)(t.admonition,{type:"warning",children:[(0,d.jsxs)(t.p,{children:["Hardware Template Variables have been deprecated: please use the new\n",(0,d.jsx)(t.a,{href:"label-templates#label-templates-variables",children:"Label Templates' Variables"})," when possible."]}),(0,d.jsxs)(t.p,{children:["Check the ",(0,d.jsx)(t.a,{href:"label-templates-deprecated",children:"deprecated variables page"})," and the\n",(0,d.jsx)(t.a,{href:"label-templates-deprecated#hardware-labels-to-new-label-templates-variables-table",children:"conversion table"}),"\nfor a smooth transition."]})]}),"\n",(0,d.jsx)(t.h2,{id:"hardware-template-variables",children:"Hardware Template Variables"}),"\n",(0,d.jsxs)(t.p,{children:["When a node is registered, hardware data is collected and made available to the MachineRegistration in a way similar to ",(0,d.jsx)(t.a,{href:"/next/smbios",children:"SMBIOS variables"}),"."]}),"\n",(0,d.jsxs)(t.p,{children:["This data can be used for easy identification and selection via a ",(0,d.jsx)(t.a,{href:"/next/machineinventoryselectortemplate-reference",children:"MachineSelector"}),"."]}),"\n",(0,d.jsx)(t.p,{children:"The following are available for templating:"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Variable"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"${System Data/Runtime/Hostname}"})}),(0,d.jsx)(t.td,{children:"The hostname of the node (at registration time)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"${System Data/Memory/Total Physical Bytes}"})}),(0,d.jsx)(t.td,{children:"The total RAM memory in the node, expressed in bytes"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"${System Data/CPU/Total Cores}"})}),(0,d.jsx)(t.td,{children:"Total CPU cores"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"${System Data/CPU/Total Threads}"})}),(0,d.jsx)(t.td,{children:"Total CPU threads"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"${System Data/CPU/Vendor}"})}),(0,d.jsx)(t.td,{children:"CPU vendor"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"${System Data/CPU/Model}"})}),(0,d.jsx)(t.td,{children:"CPU model"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"${System Data/GPU/Vendor}"})}),(0,d.jsx)(t.td,{children:"GPU vendor (Only available if the node has an identifiable GPU)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"${System Data/GPU/Model}"})}),(0,d.jsx)(t.td,{children:"GPU model (Only available if the node has an identifiable GPU)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"${System Data/Network/Number Interfaces}"})}),(0,d.jsx)(t.td,{children:"Number of network interfaces in the system"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"${System Data/Network/{Iface name}/Name}"})}),(0,d.jsx)(t.td,{children:"Network interface name"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"${System Data/Network/{Iface name}/IsVirtual}"})}),(0,d.jsx)(t.td,{children:"Boolean indicating virtual network interface"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"${System Data/Block Devices/Number Devices}"})}),(0,d.jsx)(t.td,{children:"Number of block devices in the system (includes DVD and USB drives)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"${System Data/Block Devices/{Disk name}/Name}"})}),(0,d.jsx)(t.td,{children:"Device name of the block device (i.e. sda, sr0, vda, etc...)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"${System Data/Block Devices/{Disk name}/Removable}"})}),(0,d.jsx)(t.td,{children:"Whether this block device is removable (i.e. DVD)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"${System Data/Block Devices/{Disk name}/Size}"})}),(0,d.jsx)(t.td,{children:"Total space in this block device, expressed in bytes"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"${System Data/Block Devices/{Disk name}/Drive Type}"})}),(0,d.jsx)(t.td,{children:"Drive type of this block device, see table below"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"${System Data/Block Devices/{Disk name}/Storage Controller}"})}),(0,d.jsx)(t.td,{children:"Controller type for this block device connection, see table below"})]})]})]}),"\n",(0,d.jsx)(t.admonition,{title:"info",type:"info",children:(0,d.jsxs)(t.p,{children:["On both ",(0,d.jsx)(t.code,{children:"Block Devices"})," and ",(0,d.jsx)(t.code,{children:"Network"})," the device name is used as a sub-block, as there could be more than one device."]})}),"\n",(0,d.jsx)(t.h3,{id:"block-device-drive-types",children:"Block device drive types"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"HDD"}),(0,d.jsx)(t.td,{children:"Hard disk drive"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"FDD"}),(0,d.jsx)(t.td,{children:"Floppy disk drive"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"ODD"}),(0,d.jsx)(t.td,{children:"Optical disk drive"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"SSD"}),(0,d.jsx)(t.td,{children:"Solid-state drive"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"virtual"}),(0,d.jsx)(t.td,{children:"virtual drive i.e. loop devices"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Unknown"}),(0,d.jsx)(t.td,{children:"unknown drive type"})]})]})]}),"\n",(0,d.jsx)(t.h3,{id:"block-device-controller-types",children:"Block device controller types"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"IDE"}),(0,d.jsx)(t.td,{children:"Integrated Drive Electronics"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"SCSI"}),(0,d.jsx)(t.td,{children:"Small computer system interface"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"NVMe"}),(0,d.jsx)(t.td,{children:"Non-volatile Memory Express"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"MMC"}),(0,d.jsx)(t.td,{children:"Multi-media controller (used for mobile phone storage devices)"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"virtio"}),(0,d.jsx)(t.td,{children:"Virtualized storage controller/driver"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"loop"}),(0,d.jsx)(t.td,{children:"loop device"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Unknown"}),(0,d.jsx)(t.td,{children:"unknown controller type"})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>l});var d=r(96540);const s={},n=d.createContext(s);function i(e){const t=d.useContext(n);return d.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),d.createElement(n.Provider,{value:t},e.children)}}}]);