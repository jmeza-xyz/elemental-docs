"use strict";(self.webpackChunkelemental_docs=self.webpackChunkelemental_docs||[]).push([[5375],{55286:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>h,frontMatter:()=>n,metadata:()=>c,toc:()=>o});var s=r(74848),d=r(28453);const n={sidebar_label:"Network",title:""},l=void 0,c={id:"label-templates-network",title:"",description:"Network Template Variables",source:"@site/docs/label-templates-network.md",sourceDirName:".",slug:"/label-templates-network",permalink:"/next/label-templates-network",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_label:"Network",title:""},sidebar:"docs",previous:{title:"Memory",permalink:"/next/label-templates-memory"},next:{title:"Product",permalink:"/next/label-templates-product"}},i={},o=[{value:"Network Template Variables",id:"network-template-variables",level:2}];function a(e){const t={code:"code",em:"em",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"network-template-variables",children:"Network Template Variables"}),"\n",(0,s.jsx)(t.p,{children:"The information collected in the Network template variables defines attributes of the network\ninterfaces available in the system."}),"\n",(0,s.jsxs)(t.p,{children:["The NICs are tracked both by number (0, 1, 2, ...) and by interface name (",(0,s.jsx)(t.em,{children:"eth0"}),", ",(0,s.jsx)(t.em,{children:"virbr0"}),", ...)."]}),"\n",(0,s.jsxs)(t.p,{children:["For example, if ",(0,s.jsx)(t.code,{children:"${Network/NICs/2/Name}"})," is equal to ",(0,s.jsx)(t.code,{children:"eth0"}),", then the network interface\nMac Address can be retrieved via both the ",(0,s.jsx)(t.code,{children:"${Network/NICs/2/MacAddress}"})," and the\n",(0,s.jsx)(t.code,{children:"${Network/NICs/eth0/MacAddress}"})," variables."]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Variable"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"${Network/NICs/_<Number>_/AdvertisedLinkModes}"})}),(0,s.jsx)(t.td,{children:"Ethernet Link Modes advertised as available"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"${Network/NICs/_<Number>_/Duplex}"})}),(0,s.jsx)(t.td,{children:"Ethernet Duplex mode"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"${Network/NICs/_<Number>_/IsVirtual}"})}),(0,s.jsx)(t.td,{children:'Wheter the NIC is real ("false") or not ("true")'})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"${Network/NICs/_<Number>_/MacAddress}"})}),(0,s.jsx)(t.td,{children:"MAC of the interface"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"${Network/NICs/_<Number>_/Name}"})}),(0,s.jsx)(t.td,{children:"Interface name"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"${Network/NICs/_<Number>_/Speed}"})}),(0,s.jsx)(t.td,{children:"Speed of the link"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"${Network/NICs/_<Number>_/SupportedLinkModes}"})}),(0,s.jsx)(t.td,{children:"Ethernet Link Modes supported by the NIC"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"${Network/NICs/_<Number>_/SupportedPorts}"})}),(0,s.jsx)(t.td,{children:"NIC's available ports"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"${Network/NICs/_<IfaceName>_/AdvertisedLinkModes}"})}),(0,s.jsx)(t.td,{children:"Ethernet Link Modes advertised as available"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"${Network/NICs/_<IfaceName>_/Duplex}"})}),(0,s.jsx)(t.td,{children:"Ethernet Duplex mode"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"${Network/NICs/_<IfaceName>_/IsVirtual}"})}),(0,s.jsx)(t.td,{children:'Wheter the NIC is real ("false") or not ("true")'})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"${Network/NICs/_<IfaceName>_/MacAddress}"})}),(0,s.jsx)(t.td,{children:"MAC of the interface"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"${Network/NICs/_<IfaceName>_/Name}"})}),(0,s.jsx)(t.td,{children:"Interface name"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"${Network/NICs/_<IfaceName>_/Speed}"})}),(0,s.jsx)(t.td,{children:"Speed of the link"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"${Network/NICs/_<IfaceName>_/SupportedLinkModes}"})}),(0,s.jsx)(t.td,{children:"Ethernet Link Modes supported by the NIC"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"${Network/NICs/_<IfaceName>_/SupportedPorts}"})}),(0,s.jsx)(t.td,{children:"NIC's available ports"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"${Network/TotalNICs/}"})}),(0,s.jsx)(t.td,{children:"Number of NICs present in the system"})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>l,x:()=>c});var s=r(96540);const d={},n=s.createContext(d);function l(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:l(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);